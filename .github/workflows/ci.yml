name: CI & Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & Validate
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 5s --health-timeout 5s --health-retries 10
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/app
      JWT_SECRET: test-secret
      PASSWORD_PEPPER: test-pepper
      JWT_ACCESS_EXPIRES_IN: 15m
      REFRESH_TOKEN_DAYS: 30
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run Migrations
        run: npx prisma migrate deploy

      - name: Type Check
        run: npm run typecheck

      - name: Lint
        run: npm run lint || echo "Lint warnings ignored during CI"

      - name: Build
        run: npm run build

      - name: Archive Production Build
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next

  deploy:
    name: Deploy to Vercel
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Info
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build (Vercel)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PASSWORD_PEPPER: ${{ secrets.PASSWORD_PEPPER }}
          JWT_ACCESS_EXPIRES_IN: 15m
          REFRESH_TOKEN_DAYS: 30
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
